
Перем мНастройки;
Перем мКаталогСборки;
Перем мПараметрыДоступаКБазе;
Перем мПараметрыДоступаКХранилищу;

Процедура ПрочитатьНастройки()
	
	Если АргументыКоманднойСтроки.Количество() <> 4 Тогда
		Сообщить("Не заданы аргументы командной строки");
		Сообщить("Требуется задать:");
		Сообщить("<ПутьК1С> <КаталогХранилища> <ПользовательХранилища> <ПарольХранилища>");
		ЗавершитьРаботу(1);
	КонецЕсли;
	
	мНастройки = Новый Структура;
	мНастройки.Вставить("ПутьК1С", АргументыКоманднойСтроки[0]);
	мНастройки.Вставить("КаталогХранилища", АргументыКоманднойСтроки[1]);
	мНастройки.Вставить("ПользовательХранилища", АргументыКоманднойСтроки[2]);
	мНастройки.Вставить("ПарольХранилища", АргументыКоманднойСтроки[3]);
	
	ФайлСкрипта = Новый Файл(ТекущийСценарий().Источник);
	
	мКаталогСборки = ФайлСкрипта.Каталог + "\v8Temp";
	ОбеспечитьКаталог(мКаталогСборки);
	
	мПараметрыДоступаКБазе = Новый Массив;
	мПараметрыДоступаКБазе.Добавить("DESIGNER");
	мПараметрыДоступаКБазе.Добавить("/F""" + ПутьКВременнойБазе() + """");
	мПараметрыДоступаКБазе.Добавить("/Out""" + ФайлИнформации() + """");
	
	мПараметрыДоступаКХранилищу = СкопироватьМассив(мПараметрыДоступаКБазе);
	мПараметрыДоступаКХранилищу.Добавить("/ConfigurationRepositoryF """+мНастройки.КаталогХранилища+"""");
	мПараметрыДоступаКХранилищу.Добавить("/ConfigurationRepositoryN """+мНастройки.ПользовательХранилища+"""");
	мПараметрыДоступаКХранилищу.Добавить("/ConfigurationRepositoryP """+мНастройки.ПарольХранилища+"""");
	
КонецПроцедуры

Процедура ОбеспечитьКаталог(Знач Каталог)

	Файл = Новый Файл(Каталог);
	Если НЕ Файл.Существует() Тогда
		СоздатьКаталог(Каталог);
	ИначеЕсли Не Файл.ЭтоКаталог() Тогда
		ВызватьИсключение "Каталог " + Каталог + " не является каталогом";
	КонецЕсли;

КонецПроцедуры

Функция СкопироватьМассив(Источник)
	
	НовыйМассив = Новый Массив;
	Для Каждого Элемент Из Источник Цикл
		НовыйМассив.Добавить(Элемент);
	КонецЦикла;
	
	Возврат НовыйМассив;
	
КонецФункции

Функция ЗапуститьИПодождать(Параметры)

	СтрокаЗапуска = "";
	Для Каждого Параметр Из Параметры Цикл
	
		СтрокаЗапуска = СтрокаЗапуска + " " + Параметр;
	
	КонецЦикла;

	КодВозврата = 0;
	ЗапуститьПриложение(мНастройки.ПутьК1С + СтрокаЗапуска, , Истина, КодВозврата);
	
	Возврат КодВозврата;

КонецФункции

Функция ФайлИнформации()
	Возврат мКаталогСборки + "\log.txt";
КонецФункции

Функция ПутьКВременнойБазе()
	Возврат мКаталогСборки + "\TempDB";
КонецФункции

Процедура ВывестиФайлИнформации()

	Файл = Новый Файл(ФайлИнформации());
	Если Файл.Существует() Тогда
		Чтение = Новый ЧтениеТекста(Файл.ПолноеИмя);
		Сообщение = Чтение.Прочитать();
		Сообщить(Сообщение);
		Чтение.Закрыть();
	Иначе
		Сообщить("Информации об ошибке нет");
	КонецЕсли;

КонецПроцедуры

Функция ПараметрыВременнойБазы()

	ПараметрыВремБазы = СкопироватьМассив(мПараметрыДоступаКБазе);
	ПараметрыВремБазы[1] = "/F""" + ПутьКВременнойБазе() + """";
	ПараметрыВремБазы.Удалить(2);
	
	Возврат ПараметрыВремБазы;

КонецФункции

Процедура СоздатьВременнуюБазу()

	КаталогВременнойБазы = ПутьКВременнойБазе();
	ОбеспечитьКаталог(КаталогВременнойБазы);
	УдалитьФайлы(КаталогВременнойБазы, "*.*");
	
	ПараметрыЗапуска = Новый Массив;
	ПараметрыЗапуска.Добавить("CREATEINFOBASE");
	ПараметрыЗапуска.Добавить("File="""+КаталогВременнойБазы+""";");
	ПараметрыЗапуска.Добавить("/Out""" + ФайлИнформации() + """");
	
	Сообщить("Создание временной базы");
	КодВозврата = ЗапуститьИПодождать(ПараметрыЗапуска);
	Если КодВозврата = 0 Тогда
		Сообщить("Временная база создана");
	Иначе
		Сообщить("Не удалось создать временную базу:");
		ВывестиФайлИнформации();
		ЗавершитьРаботу(1);
	КонецЕсли;

КонецПроцедуры

Процедура ПолучитьВерсиюИзХранилища()

	ПараметрыПолучитьВерсию = СкопироватьМассив(мПараметрыДоступаКХранилищу);
	ПараметрыПолучитьВерсию.Добавить("/ConfigurationRepositoryDumpCfg """+мКаталогСборки+"\source.cf""");

	Сообщить("Получение версии из хранилища");
	КодВозврата = ЗапуститьИПодождать(ПараметрыПолучитьВерсию);
	Если КодВозврата = 0 Тогда
		Сообщить("Версия получена");
	Иначе
		Сообщить("Не удалось получить версию из хранилища:");
		ВывестиФайлИнформации();
		ЗавершитьРаботу(1);
	КонецЕсли;
	
КонецПроцедуры

ПрочитатьНастройки();
ПолучитьВерсиюИзХранилища();
Сообщить("Версия получена");

