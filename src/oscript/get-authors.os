////////////////////////////////////////////////////////////////////////////////
// Вспомогательная утилита получения файла AUTHORS из хранилища 1С
//

Перем мПараметры;
Перем юТест;

Процедура СгенерироватьФайлAUTHORS()
	
	ФайлХранилища = Новый Файл(мПараметры.ФайлХранилища);
	Если Не ФайлХранилища.Существует() Тогда
		ВызватьИсключение "Файл хранилища <" + ФайлХранилища.ПолноеИмя + "> не существует.";
	КонецЕсли;
	
	ПодключитьСценарий("unpack.os", "Распаковщик");
	Распаковщик = Новый Распаковщик;
	Попытка
		ПараметрыИнициализации = Распаковщик.ПолучитьПараметрыИнициализации();
		ПараметрыИнициализации.ДоменПочтыДляGit = мПараметры.ДоменПочты;
		Распаковщик.Инициализация(ПараметрыИнициализации);
		Каталог = мПараметры.ВыходнойКаталог;
		
		Сообщить("Формирую файл в каталоге " + Каталог);
		Распаковщик.СформироватьПервичныйФайлПользователейДляGit(ФайлХранилища.ПолноеИмя, Каталог + "\AUTHORS");
		Сообщить("Файл сгенерирован");
		
	Исключение
		Сообщить("ОШИБКА: Не удалось сформировать файл авторов");
		Распаковщик.УдалитьЗарегистрированныеВременныеФайлы();
		ВызватьИсключение;
	КонецПопытки;
	
	Распаковщик.УдалитьЗарегистрированныеВременныеФайлы();
	
КонецПроцедуры

Процедура ПоказатьВозможныеАргументы()
	
	Сообщить("Для получения файла авторов из хранилища 1С задайте аргументы:
	|<ПутьКФайлуХранилища> <ДоменПочты> [ВыходнойКаталог]");
	
КонецПроцедуры

Процедура ПрочитатьПараметры()

	мПараметры = Новый Структура;
	мПараметры.Вставить("ФайлХранилища", АргументыКоманднойСтроки[0]);
	мПараметры.Вставить("ДоменПочты", АргументыКоманднойСтроки[1]);
	Если АргументыКоманднойСтроки.Количество() >= 3 Тогда
		Каталог = АргументыКоманднойСтроки[2];
	Иначе
		Каталог = ТекущийКаталог();
	КонецЕсли;
	мПараметры.Вставить("ВыходнойКаталог", Каталог);
	
КонецПроцедуры

Процедура ОбработатьПараметрыИВыполнитьЗадачу()

	Если АргументыКоманднойСтроки.Количество() < 2 Тогда	
		ПоказатьВозможныеАргументы();
		ЗавершитьРаботу(1);
	Иначе
		ПрочитатьПараметры();
		СгенерироватьФайлAUTHORS();
	КонецЕсли;

КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////
// Юнит-тестирование

Функция ПолучитьСписокТестов(Тестирование) Экспорт
	
	юТест = Тестирование;
	
	СписокТестов = Новый Массив;
	СписокТестов.Добавить("Тест_СгенерироватьФайл");
	
	Возврат СписокТестов;
	
КонецФункции

Процедура Тест_СгенерироватьФайл() Экспорт

	ПутьКФайлуХранилища1С = Новый Файл("testData\ТестовыйФайлХранилища1С.1CD");
	
	мПараметры = Новый Структура;
	мПараметры.Вставить("ФайлХранилища", ПутьКФайлуХранилища1С.ПолноеИмя);
	мПараметры.Вставить("ДоменПочты"   , "silverbulleters.org");
	мПараметры.Вставить("ВыходнойКаталог", ТекущийКаталог());
	
	ФайлАвторов = Новый Файл("AUTHORS");
	юТест.ПроверитьЛожь(ФайлАвторов.Существует(), "Не должно быть файла AUTHORS в выходном каталоге");
	СгенерироватьФайлAUTHORS();
	юТест.ПроверитьИстину(ФайлАвторов.Существует(), "Должен быть файл AUTHORS в выходном каталоге");
	УдалитьФайлы(ФайлАвторов.ПолноеИмя);
	
КонецПроцедуры

/////////////////////////////////////////////////////////////////////////////////
// Точка входа

Если СтартовыйСценарий().Источник = ТекущийСценарий().Источник Тогда	
	// Это реальный запуск, а не юнит-тестирование
	ОбработатьПараметрыИВыполнитьЗадачу();
КонецЕсли;
