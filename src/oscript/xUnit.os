//////////////////////////////////////////////////////////////////
// 
// Объект-помощник для юнит-тестирования
//
//////////////////////////////////////////////////////////////////


//////////////////////////////////////////////////////////////////////////////
// Прикладной интерфейс
//

Процедура ПроверитьИстину(Знач Условие, Знач ДопСообщениеОшибки = "") Экспорт

	Проверить(Условие, ДопСообщениеОшибки);

КонецПроцедуры

Процедура ПроверитьЛожь(Знач Условие, Знач ДопСообщениеОшибки = "") Экспорт

	Если Условие Тогда
		СообщениеОшибки = "Переданный параметр ("+Условие+") не является Ложью, а хотели, чтобы являлся." + ФорматДСО(ДопСообщениеОшибки);
		ВызватьИсключение(СообщениеОшибки);
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьРавенство(Знач ПервоеЗначение, Знач ВтороеЗначение, Знач ДопСообщениеОшибки = "") Экспорт
	
	Если ПервоеЗначение <> ВтороеЗначение Тогда
		СообщениеОшибки = "Сравниваемые значения ("+ПервоеЗначение+"; "+ВтороеЗначение+") не равны, а хотели, чтобы были равны." + ФорматДСО(ДопСообщениеОшибки);
		ВызватьИсключение(СообщениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьНеРавенство(Знач ПервоеЗначение, Знач ВтороеЗначение, Знач ДопСообщениеОшибки = "") Экспорт
	
	Если ПервоеЗначение = ВтороеЗначение Тогда
		СообщениеОшибки = "Сравниваемые значения ("+ПервоеЗначение+"; "+ВтороеЗначение+") равны, а хотели, чтобы были не равны." + ФорматДСО(ДопСообщениеОшибки);
		ВызватьИсключение(СообщениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

Процедура Проверить(Знач Условие, ДопСообщениеОшибки = "") Экспорт
	
	Если Не Условие Тогда
		СообщениеОшибки = "Переданный параметр ("+Условие+") не является Истиной, а хотели, чтобы являлся." + ФорматДСО(ДопСообщениеОшибки);
		ВызватьИсключение(СообщениеОшибки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьЗаполненность(Знач ПроверяемоеЗначение, Знач ДопСообщениеОшибки = "") Экспорт
    Заполнено = ЗначениеЗаполнено(ПроверяемоеЗначение);
	
    Если Не Заполнено Тогда
        ВызватьИсключение "Значение ("+ПроверяемоеЗначение+") не заполнено, а ожидалась заполненность" + ФорматДСО(ДопСообщениеОшибки);
    КонецЕсли; 
КонецПроцедуры

Процедура ПроверитьНеЗаполненность(Знач ПроверяемоеЗначение, Знач ДопСообщениеОшибки = "") Экспорт
	СообщениеОшибки = "Значение ("+ПроверяемоеЗначение+") заполнено, а ожидалась незаполненность" + ФорматДСО(ДопСообщениеОшибки);
	Заполнено = ЗначениеЗаполнено(ПроверяемоеЗначение);
    
    Если Заполнено Тогда
        ВызватьИсключение СообщениеОшибки;
    КонецЕсли; 
КонецПроцедуры

Функция ЗначениеЗаполнено(Знач Значение) Экспорт
	
	Если Значение = Неопределено Тогда
		Возврат Ложь;
	ИначеЕсли Значение = 0 Тогда
		Возврат Ложь;
	ИначеЕсли ПустаяСтрока(Значение) Тогда
		Возврат Ложь;
	Иначе
		Возврат Истина;
	КонецЕсли;
	
КонецФункции

// Вызывает исключение с заданным текстом ошибки для прерывания выполнения тестового случая.
// 
Функция ПрерватьТест(Знач ТекстОшибки) Экспорт
	
	ВызватьИсключение ТекстОшибки;
	
КонецФункции

//////////////////////////////////////////////////////////////////////////////
// Служебные методы


Функция ФорматДСО(ДопСообщениеОшибки)
	
	Если ДопСообщениеОшибки = "" Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат Символы.ПС + ДопСообщениеОшибки;
	
КонецФункции
